{"ast":null,"code":"var _jsxFileName = \"D:\\\\backup\\\\misc\\\\Attend\\\\frontend-react\\\\src\\\\components\\\\LeaveManagement.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './LeaveManagement.css';\nimport Layout from './Layout';\nimport LeaveRequestPopup from './LeaveRequestPopup';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeaveManagement = ({\n  userData,\n  onLogout\n}) => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [leaveRequests, setLeaveRequests] = useState([]);\n  const {\n    employees\n  } = useAuth();\n  useEffect(() => {\n    if (userData) {\n      console.log('ðŸ”µ Current logged-in user:', {\n        id: userData.id,\n        name: userData.name,\n        role_id: userData.role_id\n      });\n      fetchLeaveRequests();\n    }\n  }, [userData]);\n  const fetchLeaveRequests = async () => {\n    // Implementation of fetchLeaveRequests\n  };\n  const handleNewLeave = () => {\n    console.log('Opening new leave request popup');\n    setIsPopupOpen(true);\n  };\n  const handleClosePopup = () => {\n    setIsPopupOpen(false);\n  };\n  const handleSubmitLeave = async leaveData => {\n    // Implementation of handleSubmitLeave\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    onLogout: onLogout,\n    userData: userData,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leave-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leave-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Leave Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-leave-button\",\n          onClick: handleNewLeave,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"plus-icon\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12 5v14M5 12h14\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), \"New Leave\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(LeaveRequestPopup, {\n        onClose: handleClosePopup,\n        onSubmit: handleSubmitLeave,\n        users: employees,\n        currentUser: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-picker-container\",\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: selectedDate,\n          onChange: date => setSelectedDate(date),\n          inline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(LeaveManagement, \"X+0bfnMr3+Aqc2WpF7zeZqAxlKc=\", false, function () {\n  return [useAuth];\n});\n_c = LeaveManagement;\nexport default LeaveManagement;\nvar _c;\n$RefreshReg$(_c, \"LeaveManagement\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","Layout","LeaveRequestPopup","useAuth","jsxDEV","_jsxDEV","LeaveManagement","userData","onLogout","_s","selectedDate","setSelectedDate","Date","isPopupOpen","setIsPopupOpen","leaveRequests","setLeaveRequests","employees","console","log","id","name","role_id","fetchLeaveRequests","handleNewLeave","handleClosePopup","handleSubmitLeave","leaveData","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","onClose","onSubmit","users","currentUser","selected","onChange","date","inline","_c","$RefreshReg$"],"sources":["D:/backup/misc/Attend/frontend-react/src/components/LeaveManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport './LeaveManagement.css';\r\nimport Layout from './Layout';\r\nimport LeaveRequestPopup from './LeaveRequestPopup';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\ninterface User {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  role_id: number;\r\n  department_id: number;\r\n}\r\n\r\ninterface LeaveRequest {\r\n  id: number;\r\n  user_id: number;\r\n  start_date: string;\r\n  end_date: string;\r\n  status: string;\r\n  type: string;\r\n}\r\n\r\ninterface LeaveManagementProps {\r\n  userData: User | null;\r\n  onLogout: () => void;\r\n}\r\n\r\nconst LeaveManagement: React.FC<LeaveManagementProps> = ({ userData, onLogout }) => {\r\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\r\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n  const [leaveRequests, setLeaveRequests] = useState<LeaveRequest[]>([]);\r\n  const { employees } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (userData) {\r\n      console.log('ðŸ”µ Current logged-in user:', {\r\n        id: userData.id,\r\n        name: userData.name,\r\n        role_id: userData.role_id\r\n      });\r\n      fetchLeaveRequests();\r\n    }\r\n  }, [userData]);\r\n\r\n  const fetchLeaveRequests = async () => {\r\n    // Implementation of fetchLeaveRequests\r\n  };\r\n\r\n  const handleNewLeave = () => {\r\n    console.log('Opening new leave request popup');\r\n    setIsPopupOpen(true);\r\n  };\r\n\r\n  const handleClosePopup = () => {\r\n    setIsPopupOpen(false);\r\n  };\r\n\r\n  const handleSubmitLeave = async (leaveData: any) => {\r\n    // Implementation of handleSubmitLeave\r\n  };\r\n\r\n  return (\r\n    <Layout onLogout={onLogout} userData={userData}>\r\n      <div className=\"leave-container\">\r\n        <div className=\"leave-header\">\r\n          <h1>Leave Management</h1>\r\n          <button className=\"new-leave-button\" onClick={handleNewLeave}>\r\n            <svg className=\"plus-icon\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M12 5v14M5 12h14\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n            </svg>\r\n            New Leave\r\n          </button>\r\n        </div>\r\n        \r\n        {isPopupOpen && (\r\n          <LeaveRequestPopup\r\n            onClose={handleClosePopup}\r\n            onSubmit={handleSubmitLeave}\r\n            users={employees}\r\n            currentUser={userData!}\r\n          />\r\n        )}\r\n\r\n        <div className=\"date-picker-container\">\r\n          <DatePicker\r\n            selected={selectedDate}\r\n            onChange={(date: Date | null) => setSelectedDate(date)}\r\n            inline\r\n          />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default LeaveManagement; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}